% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autogenerated.r, R/checkEnvironment.r
\name{assertEnvironment}
\alias{assertEnvironment}
\alias{assert_environment}
\alias{checkEnvironment}
\alias{expect_environment}
\alias{testEnvironment}
\alias{test_environment}
\title{Check if an argument is an environment}
\usage{
assertEnvironment(x, contains = character(0L), add = NULL, .var.name)

assert_environment(x, contains = character(0L), add = NULL, .var.name)

testEnvironment(x, contains = character(0L))

test_environment(x, contains = character(0L))

expect_environment(x, contains = character(0L), info = NULL, label = NULL)

checkEnvironment(x, contains = character(0L))
}
\arguments{
\item{x}{[any]\cr
Object to check.}

\item{contains}{[\code{character}]\cr
Vector of object names expected in the environment.
Defaults to \code{character(0)}.}

\item{add}{[\code{AssertCollection}]\cr
Collection to store assertions. See \code{\link{AssertCollection}}.}

\item{.var.name}{[character(1)]\cr
Name for \code{x}. Defaults to a heuristic to determine
the name using \code{\link[base]{deparse}} and \code{\link[base]{substitute}}.}

\item{info}{[character(1)]\cr
Extra information to be included in the message for the testthat reporter.
See \code{\link[testthat]{expect_that}}.}

\item{label}{[character(1)]\cr
Same as \code{.var.name}, but passed down to \code{\link[testthat]{expect_that}}.}
}
\value{
Depending on the function prefix:
 If the check is successful, all functions return \code{TRUE}. If the check
 is not successful, \code{assertEnvironment}/\code{assert_environment}
 throws an error message, \code{testEnvironment}/\code{test_environment}
 returns \code{FALSE},
 and \code{checkEnvironment} returns a string with the error message.
 The function \code{expect_environment} will return an
 \code{\link[testthat]{expectation}}.
}
\description{
Check if an argument is an environment
}
\examples{
ee = as.environment(list(a = 1))
testEnvironment(ee)
testEnvironment(ee, contains = "a")
}
\seealso{
Other basetypes: \code{\link{assertArray}},
  \code{\link{assertAtomicVector}},
  \code{\link{assertAtomic}},
  \code{\link{assertCharacter}},
  \code{\link{assertComplex}},
  \code{\link{assertDataFrame}},
  \code{\link{assertDataTable}},
  \code{\link{assertFactor}}, \code{\link{assertFunction}},
  \code{\link{assertIntegerish}},
  \code{\link{assertInteger}}, \code{\link{assertList}},
  \code{\link{assertLogical}}, \code{\link{assertMatrix}},
  \code{\link{assertNumeric}}, \code{\link{assertVector}}
}

